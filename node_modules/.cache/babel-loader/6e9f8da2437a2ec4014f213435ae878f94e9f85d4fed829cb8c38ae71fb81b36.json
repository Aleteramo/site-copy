{"ast":null,"code":"var _jsxFileName = \"/Users/alessiocavatassi/Desktop/site/src/DettaglioCapitolo.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport './App.css';\nconst contenutiCapitoli = [{\n  id: 0,\n  titolo: \"Panorama dell'IA\",\n  affermazioni: [{\n    testo: \"L'intelligenza artificiale non riesce a creare o a gestire una pianificazione strategica complessa...\",\n    contestazioni: \"AlphaGo ha battuto Lee Sedol nel 2016, dimostrando capacità strategiche superiori.\",\n    immagine: \"immagine1.jpg\",\n    // Assumi che questa immagine sia rilevante per la contestazione\n    commento: \"Parla di come AlphaGo ha utilizzato l'intuizione per vincere.\"\n  }, {\n    testo: \"L'IA non è in grado di gestire spazi sconosciuti e non strutturati...\",\n    contestazioni: \"Optimus 2 e Gemini mostrano abilità avanzate in ambienti non strutturati.\",\n    immagine: \"immagine2.jpg\",\n    commento: \"Mostra come questi robot gestiscono compiti complessi.\"\n  }]\n}];\nimport immagine1 from './immagini2/immagine1.jpg';\nimport immagine2 from './immagini2/immagine2.jpg';\n\n// Mappa per associare il nome dell'immagine al suo import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mappaImmagini = {\n  \"immagine1.jpg\": immagine1,\n  \"immagine2.jpg\": immagine2\n  // Aggiungi altre immagini come necessario\n};\nconst DettaglioCapitolo = () => {\n  _s();\n  let {\n    id\n  } = useParams();\n  const capitolo = contenutiCapitoli.find(c => c.id === parseInt(id, 10));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box-semi-trasparente\",\n    children: capitolo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: capitolo.titolo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenuto-capitolo\",\n        children: capitolo.affermazioni.map((affermazione, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"affermazione-contestazione\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"affermazione\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Affermazione:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 22\n              }, this), \" \", affermazione.testo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contestazione\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Contestazione:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 22\n              }, this), \" \", affermazione.contestazioni]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: mappaImmagini[affermazione.immagine],\n              alt: \"Esempio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"Commento:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 22\n              }, this), \" \", affermazione.commento]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Capitolo non trovato.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(DettaglioCapitolo, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = DettaglioCapitolo;\nexport default DettaglioCapitolo;\nvar _c;\n$RefreshReg$(_c, \"DettaglioCapitolo\");","map":{"version":3,"names":["React","useParams","contenutiCapitoli","id","titolo","affermazioni","testo","contestazioni","immagine","commento","immagine1","immagine2","jsxDEV","_jsxDEV","Fragment","_Fragment","mappaImmagini","DettaglioCapitolo","_s","capitolo","find","c","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","affermazione","index","src","alt","_c","$RefreshReg$"],"sources":["/Users/alessiocavatassi/Desktop/site/src/DettaglioCapitolo.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport './App.css'; \n\nconst contenutiCapitoli = [\n  {\n    id: 0,\n    titolo: \"Panorama dell'IA\",\n    affermazioni: [\n      {\n        testo: \"L'intelligenza artificiale non riesce a creare o a gestire una pianificazione strategica complessa...\",\n        contestazioni: \"AlphaGo ha battuto Lee Sedol nel 2016, dimostrando capacità strategiche superiori.\",\n        immagine: \"immagine1.jpg\", // Assumi che questa immagine sia rilevante per la contestazione\n        commento: \"Parla di come AlphaGo ha utilizzato l'intuizione per vincere.\"\n      },\n      {\n        testo: \"L'IA non è in grado di gestire spazi sconosciuti e non strutturati...\",\n        contestazioni: \"Optimus 2 e Gemini mostrano abilità avanzate in ambienti non strutturati.\",\n        immagine: \"immagine2.jpg\",\n        commento: \"Mostra come questi robot gestiscono compiti complessi.\"\n      }\n    ]\n  }\n];\n\n\nimport immagine1 from './immagini2/immagine1.jpg';\nimport immagine2 from './immagini2/immagine2.jpg';\n\n// Mappa per associare il nome dell'immagine al suo import\nconst mappaImmagini = {\n  \"immagine1.jpg\": immagine1,\n  \"immagine2.jpg\": immagine2,\n  // Aggiungi altre immagini come necessario\n};\n\nconst DettaglioCapitolo = () => {\n  let { id } = useParams();\n  const capitolo = contenutiCapitoli.find(c => c.id === parseInt(id, 10));\n\n  return (\n    <div className=\"box-semi-trasparente\">\n      {capitolo ? (\n        <>\n          <h2>{capitolo.titolo}</h2>\n          <div className=\"contenuto-capitolo\">\n            {capitolo.affermazioni.map((affermazione, index) => (\n              <div key={index} className=\"affermazione-contestazione\">\n                <div className=\"affermazione\">\n                  <p><strong>Affermazione:</strong> {affermazione.testo}</p>\n                </div>\n                <div className=\"contestazione\">\n                  <p><strong>Contestazione:</strong> {affermazione.contestazioni}</p>\n                  <img src={mappaImmagini[affermazione.immagine]} alt=\"Esempio\" />\n                  <p><em>Commento:</em> {affermazione.commento}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      ) : (\n        <p>Capitolo non trovato.</p>\n      )}\n    </div>\n  );\n};\n\nexport default DettaglioCapitolo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}