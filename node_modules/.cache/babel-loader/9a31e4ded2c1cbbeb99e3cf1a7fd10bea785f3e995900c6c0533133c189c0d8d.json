{"ast":null,"code":"var _jsxFileName = \"/Users/alessiocavatassi/Desktop/site/src/Carosello.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { Link } from 'react-router-dom';\nimport immagine1 from './immagini2/immagine1.jpg';\nimport immagine2 from './immagini2/immagine2.jpg';\nimport immagine3 from './immagini2/immagine3.jpg';\nimport immagine4 from './immagini2/immagine4.jpg';\nimport immagine5 from './immagini2/immagine5.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CaroselloImage = ({\n  src,\n  alt,\n  index\n}) => {\n  _s();\n  const [style, api] = useSpring(() => ({\n    scale: 1,\n    boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.2)',\n    config: {\n      mass: 1,\n      tension: 210,\n      friction: 20\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/dettaglio/${index}`,\n    children: /*#__PURE__*/_jsxDEV(animated.img, {\n      src: src,\n      alt: alt,\n      onMouseEnter: () => api.start({\n        scale: 1.1,\n        boxShadow: '0px 20px 30px rgba(0, 0, 0, 0.5)'\n      }),\n      onMouseLeave: () => api.start({\n        scale: 1,\n        boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.2)'\n      }),\n      style: {\n        transform: style.scale.to(scale => `scale(${scale})`),\n        boxShadow: style.boxShadow\n      },\n      className: \"carosello-immagine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CaroselloImage, \"XYAXN3TtksQQr1FXlH0qS8PWYv0=\", false, function () {\n  return [useSpring];\n});\n_c = CaroselloImage;\nconst immagini = [immagine1, immagine2, immagine3, immagine4, immagine5];\nconst Carosello = () => {\n  _s2();\n  const caroselloRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      // Logica basata su isIntersecting, se necessario\n    }, {\n      threshold: 1.0\n    });\n    if (caroselloRef.current) {\n      observer.observe(caroselloRef.current);\n    }\n    return () => {\n      if (caroselloRef.current) {\n        observer.unobserve(caroselloRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: caroselloRef,\n    className: \"carousel-container\",\n    children: immagini.map((src, index) => /*#__PURE__*/_jsxDEV(CaroselloImage, {\n      src: src,\n      alt: `Immagine ${index + 1}`,\n      index: index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s2(Carosello, \"CMNwrTNPqpDgqHx8DEfE8E2jkAg=\");\n_c2 = Carosello;\nexport default Carosello;\nvar _c, _c2;\n$RefreshReg$(_c, \"CaroselloImage\");\n$RefreshReg$(_c2, \"Carosello\");","map":{"version":3,"names":["React","useRef","useEffect","useSpring","animated","Link","immagine1","immagine2","immagine3","immagine4","immagine5","jsxDEV","_jsxDEV","CaroselloImage","src","alt","index","_s","style","api","scale","boxShadow","config","mass","tension","friction","to","children","img","onMouseEnter","start","onMouseLeave","transform","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","immagini","Carosello","_s2","caroselloRef","observer","IntersectionObserver","entry","threshold","current","observe","unobserve","ref","map","_c2","$RefreshReg$"],"sources":["/Users/alessiocavatassi/Desktop/site/src/Carosello.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { Link } from 'react-router-dom';\n\nimport immagine1 from './immagini2/immagine1.jpg';\nimport immagine2 from './immagini2/immagine2.jpg';\nimport immagine3 from './immagini2/immagine3.jpg';\nimport immagine4 from './immagini2/immagine4.jpg';\nimport immagine5 from './immagini2/immagine5.jpg';\n\nconst CaroselloImage = ({ src, alt, index }) => {\n  const [style, api] = useSpring(() => ({\n    scale: 1,\n    boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.2)',\n    config: { mass: 1, tension: 210, friction: 20 },\n  }));\n\n  return (\n    <Link to={`/dettaglio/${index}`}>\n      <animated.img\n        src={src}\n        alt={alt}\n        onMouseEnter={() => api.start({ scale: 1.1, boxShadow: '0px 20px 30px rgba(0, 0, 0, 0.5)' })}\n        onMouseLeave={() => api.start({ scale: 1, boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.2)' })}\n        style={{\n          transform: style.scale.to(scale => `scale(${scale})`),\n          boxShadow: style.boxShadow,\n        }}\n        className=\"carosello-immagine\"\n      />\n    </Link>\n  );\n};\n\nconst immagini = [immagine1, immagine2, immagine3, immagine4, immagine5];\n\nconst Carosello = () => {\n  const caroselloRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        // Logica basata su isIntersecting, se necessario\n      },\n      { threshold: 1.0 }\n    );\n\n    if (caroselloRef.current) {\n      observer.observe(caroselloRef.current);\n    }\n\n    return () => {\n      if (caroselloRef.current) {\n        observer.unobserve(caroselloRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div ref={caroselloRef} className=\"carousel-container\">\n      {immagini.map((src, index) => (\n        <CaroselloImage key={index} src={src} alt={`Immagine ${index + 1}`} index={index} />\n      ))}\n    </div>\n  );\n};\n\nexport default Carosello;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}