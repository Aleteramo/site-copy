{"ast":null,"code":"var _jsxFileName = \"/Users/alessiocavatassi/Desktop/site/src/Carosello.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react'; // Aggiungi useRef qui\nimport { Link } from 'react-router-dom';\n\n// Importa le immagini\nimport immagine1 from './immagini2/immagine1.jpg';\nimport immagine2 from './immagini2/immagine2.jpg';\nimport immagine3 from './immagini2/immagine3.jpg';\nimport immagine4 from './immagini2/immagine4.jpg';\nimport immagine5 from './immagini2/immagine5.jpg';\n\n// Definisci la variabile immagini come un array dei percorsi delle immagini importate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst immagini = [immagine1, immagine2, immagine3, immagine4, immagine5];\nconst Carosello = () => {\n  _s();\n  const caroselloRef = useRef(null);\n  const [scrollY, setScrollY] = useState(0);\n  const [caroselloStartY, setCaroselloStartY] = useState(null);\n  const [isCaroselloFullyInView, setIsCaroselloFullyInView] = useState(false);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      setScrollY(currentScrollY);\n      if (caroselloRef.current) {\n        const caroselloRect = caroselloRef.current.getBoundingClientRect();\n        const isFullyInView = caroselloRect.top >= 0 && caroselloRect.bottom <= window.innerHeight;\n        setIsCaroselloFullyInView(isFullyInView);\n        if (isFullyInView) {\n          // Imposta la posizione di inizio del carosello al primo scroll che lo rende visibile\n          if (caroselloStartY === null) {\n            setCaroselloStartY(currentScrollY);\n          }\n          // Calcola la posizione di scroll relativa al carosello\n          const scrollDelta = currentScrollY - caroselloStartY;\n          // Aggiorna la posizione delle immagini del carosello\n          updateCaroselloPosition(scrollDelta);\n        } else {\n          setCaroselloStartY(null);\n        }\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [caroselloStartY]);\n  const updateCaroselloPosition = scrollDelta => {\n    // Calcola la posizione orizzontale delle immagini basata su scrollDelta\n    const movementSpeed = 2; // Regola la velocità di movimento delle immagini\n    const maxScroll = immagini.length * 300; // Calcola lo scroll massimo basato sul numero di immagini e spazio tra di esse\n\n    // Aggiorna la posizione di ogni immagine del carosello\n    immagini.forEach((_, index) => {\n      const imageElement = caroselloRef.current.children[index];\n      const newPosition = Math.min(maxScroll, scrollDelta * movementSpeed);\n      imageElement.style.transform = `translateX(-${newPosition}px)`;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: caroselloRef,\n    className: \"carousel-container\",\n    children: immagini.map((src, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/dettaglio/${index}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: `Immagine ${index + 1}`,\n        className: \"carosello-immagine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Carosello, \"M2tZDiELoPWWdSnA4UAkWD9Qlcs=\");\n_c = Carosello;\nexport default Carosello;\nvar _c;\n$RefreshReg$(_c, \"Carosello\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","immagine1","immagine2","immagine3","immagine4","immagine5","jsxDEV","_jsxDEV","immagini","Carosello","_s","caroselloRef","scrollY","setScrollY","caroselloStartY","setCaroselloStartY","isCaroselloFullyInView","setIsCaroselloFullyInView","handleScroll","currentScrollY","window","current","caroselloRect","getBoundingClientRect","isFullyInView","top","bottom","innerHeight","scrollDelta","updateCaroselloPosition","addEventListener","removeEventListener","movementSpeed","maxScroll","length","forEach","_","index","imageElement","children","newPosition","Math","min","style","transform","ref","className","map","src","to","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alessiocavatassi/Desktop/site/src/Carosello.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'; // Aggiungi useRef qui\nimport { Link } from 'react-router-dom';\n\n// Importa le immagini\nimport immagine1 from './immagini2/immagine1.jpg';\nimport immagine2 from './immagini2/immagine2.jpg';\nimport immagine3 from './immagini2/immagine3.jpg';\nimport immagine4 from './immagini2/immagine4.jpg';\nimport immagine5 from './immagini2/immagine5.jpg';\n\n// Definisci la variabile immagini come un array dei percorsi delle immagini importate\nconst immagini = [immagine1, immagine2, immagine3, immagine4, immagine5];\n\n\nconst Carosello = () => {\n  const caroselloRef = useRef(null);\n  const [scrollY, setScrollY] = useState(0);\n  const [caroselloStartY, setCaroselloStartY] = useState(null);\n  const [isCaroselloFullyInView, setIsCaroselloFullyInView] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      setScrollY(currentScrollY);\n\n      if (caroselloRef.current) {\n        const caroselloRect = caroselloRef.current.getBoundingClientRect();\n        const isFullyInView = caroselloRect.top >= 0 && caroselloRect.bottom <= window.innerHeight;\n\n        setIsCaroselloFullyInView(isFullyInView);\n\n        if (isFullyInView) {\n          // Imposta la posizione di inizio del carosello al primo scroll che lo rende visibile\n          if (caroselloStartY === null) {\n            setCaroselloStartY(currentScrollY);\n          }\n          // Calcola la posizione di scroll relativa al carosello\n          const scrollDelta = currentScrollY - caroselloStartY;\n          // Aggiorna la posizione delle immagini del carosello\n          updateCaroselloPosition(scrollDelta);\n        } else {\n          setCaroselloStartY(null);\n        }\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [caroselloStartY]);\n\n  const updateCaroselloPosition = (scrollDelta) => {\n    // Calcola la posizione orizzontale delle immagini basata su scrollDelta\n    const movementSpeed = 2; // Regola la velocità di movimento delle immagini\n    const maxScroll = immagini.length * 300; // Calcola lo scroll massimo basato sul numero di immagini e spazio tra di esse\n\n    // Aggiorna la posizione di ogni immagine del carosello\n    immagini.forEach((_, index) => {\n      const imageElement = caroselloRef.current.children[index];\n      const newPosition = Math.min(maxScroll, scrollDelta * movementSpeed);\n      imageElement.style.transform = `translateX(-${newPosition}px)`;\n    });\n  };\n\n  return (\n    <div ref={caroselloRef} className=\"carousel-container\">\n      {immagini.map((src, index) => (\n        <Link key={index} to={`/dettaglio/${index}`}>\n          <img src={src} alt={`Immagine ${index + 1}`} className=\"carosello-immagine\" />\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default Carosello;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}