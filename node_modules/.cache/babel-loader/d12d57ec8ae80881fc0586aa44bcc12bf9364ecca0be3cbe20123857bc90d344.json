{"ast":null,"code":"var _jsxFileName = \"/Users/alessiocavatassi/Desktop/site/src/Carosello.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Aggiungi useState qui\nimport { Link } from 'react-router-dom';\n\n// Assicurati che le immagini siano importate correttamente\nimport immagine1 from './immagini2/immagine1.jpg';\nimport immagine2 from './immagini2/immagine2.jpg';\nimport immagine3 from './immagini2/immagine3.jpg';\nimport immagine4 from './immagini2/immagine4.jpg';\nimport immagine5 from './immagini2/immagine5.jpg';\n\n// Definisci la variabile immagini come un array dei percorsi delle immagini importate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst immagini = [immagine1, immagine2, immagine3, immagine4, immagine5];\nconst Carosello = () => {\n  _s();\n  const [scrollY, setScrollY] = useState(0); // useState è ora importato correttamente\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrollY(window.scrollY);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  // Calcola la posizione orizzontale delle immagini basata su scrollY\n  const calculatePosition = index => {\n    const startMovingPoint = 800; // Ad esempio, inizia a muoversi quando l'utente ha scrollato 800px\n    const movementSpeed = 0.5; // Velocità con cui le immagini si muovono rispetto allo scroll\n    // Calcola la posizione iniziale delle immagini in modo che siano fuori dalla viewport\n    // Usa 'window.innerWidth' per ottenere la larghezza della viewport\n    let initialPosition = window.innerWidth;\n    // Calcola quanto l'utente ha scrollato oltre il punto di inizio\n    let scrollBeyondStart = Math.max(scrollY - startMovingPoint, 0);\n\n    // Calcola la posizione finale delle immagini basata sullo scroll\n    let finalPosition = initialPosition - scrollBeyondStart * movementSpeed;\n    // Assicurati che le immagini non si muovano troppo a sinistra\n    finalPosition = Math.max(finalPosition, -index * 300); // '300' è la distanza tra le immagini\n\n    return finalPosition;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-container\",\n    style: {\n      overflowX: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    children: immagini.map((src, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/dettaglio/${index}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: `Immagine ${index + 1}`,\n        style: {\n          transform: `translateX(${calculatePosition(index)}px)`,\n          display: 'inline-block'\n        },\n        className: \"carosello-immagine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Carosello, \"eTR5W6wH45bVtWbD0ho0jkNrbDM=\");\n_c = Carosello;\nexport default Carosello;\nvar _c;\n$RefreshReg$(_c, \"Carosello\");","map":{"version":3,"names":["React","useState","useEffect","Link","immagine1","immagine2","immagine3","immagine4","immagine5","jsxDEV","_jsxDEV","immagini","Carosello","_s","scrollY","setScrollY","handleScroll","window","addEventListener","removeEventListener","calculatePosition","index","startMovingPoint","movementSpeed","initialPosition","innerWidth","scrollBeyondStart","Math","max","finalPosition","className","style","overflowX","whiteSpace","children","map","src","to","alt","transform","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alessiocavatassi/Desktop/site/src/Carosello.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Aggiungi useState qui\nimport { Link } from 'react-router-dom';\n\n// Assicurati che le immagini siano importate correttamente\nimport immagine1 from './immagini2/immagine1.jpg';\nimport immagine2 from './immagini2/immagine2.jpg';\nimport immagine3 from './immagini2/immagine3.jpg';\nimport immagine4 from './immagini2/immagine4.jpg';\nimport immagine5 from './immagini2/immagine5.jpg';\n\n// Definisci la variabile immagini come un array dei percorsi delle immagini importate\nconst immagini = [immagine1, immagine2, immagine3, immagine4, immagine5];\n\nconst Carosello = () => {\n  const [scrollY, setScrollY] = useState(0); // useState è ora importato correttamente\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrollY(window.scrollY);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  // Calcola la posizione orizzontale delle immagini basata su scrollY\n  const calculatePosition = (index) => {\n\n    const startMovingPoint = 800; // Ad esempio, inizia a muoversi quando l'utente ha scrollato 800px\n    const movementSpeed = 0.5; // Velocità con cui le immagini si muovono rispetto allo scroll\n   // Calcola la posizione iniziale delle immagini in modo che siano fuori dalla viewport\n    // Usa 'window.innerWidth' per ottenere la larghezza della viewport\n    let initialPosition = window.innerWidth;\n    // Calcola quanto l'utente ha scrollato oltre il punto di inizio\n    let scrollBeyondStart = Math.max(scrollY - startMovingPoint, 0);\n\n    // Calcola la posizione finale delle immagini basata sullo scroll\n    let finalPosition = initialPosition - (scrollBeyondStart * movementSpeed);\n    // Assicurati che le immagini non si muovano troppo a sinistra\n    finalPosition = Math.max(finalPosition, -index * 300); // '300' è la distanza tra le immagini\n\n    return finalPosition;\n  };\n\n\n\n  return (\n    <div className=\"carousel-container\" style={{ overflowX: 'hidden', whiteSpace: 'nowrap' }}>\n      {immagini.map((src, index) => (\n        <Link key={index} to={`/dettaglio/${index}`}>\n          <img\n            src={src}\n            alt={`Immagine ${index + 1}`}\n            style={{ transform: `translateX(${calculatePosition(index)}px)`, display: 'inline-block'  }}\n            className=\"carosello-immagine\"\n          />\n        </Link>\n      ))}\n    </div>\n  );\n};\n\n\nexport default Carosello;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AACpD,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,CAACP,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,CAAC;AAExE,MAAMI,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAGA,CAAA,KAAM;MACzBD,UAAU,CAACE,MAAM,CAACH,OAAO,CAAC;IAC5B,CAAC;IAEDG,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IAEnC,MAAMC,gBAAgB,GAAG,GAAG,CAAC,CAAC;IAC9B,MAAMC,aAAa,GAAG,GAAG,CAAC,CAAC;IAC5B;IACC;IACA,IAAIC,eAAe,GAAGP,MAAM,CAACQ,UAAU;IACvC;IACA,IAAIC,iBAAiB,GAAGC,IAAI,CAACC,GAAG,CAACd,OAAO,GAAGQ,gBAAgB,EAAE,CAAC,CAAC;;IAE/D;IACA,IAAIO,aAAa,GAAGL,eAAe,GAAIE,iBAAiB,GAAGH,aAAc;IACzE;IACAM,aAAa,GAAGF,IAAI,CAACC,GAAG,CAACC,aAAa,EAAE,CAACR,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;;IAEvD,OAAOQ,aAAa;EACtB,CAAC;EAID,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,oBAAoB;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACtFvB,QAAQ,CAACwB,GAAG,CAAC,CAACC,GAAG,EAAEf,KAAK,kBACvBX,OAAA,CAACP,IAAI;MAAakC,EAAE,EAAG,cAAahB,KAAM,EAAE;MAAAa,QAAA,eAC1CxB,OAAA;QACE0B,GAAG,EAAEA,GAAI;QACTE,GAAG,EAAG,YAAWjB,KAAK,GAAG,CAAE,EAAE;QAC7BU,KAAK,EAAE;UAAEQ,SAAS,EAAG,cAAanB,iBAAiB,CAACC,KAAK,CAAE,KAAI;UAAEmB,OAAO,EAAE;QAAgB,CAAE;QAC5FV,SAAS,EAAC;MAAoB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC,GANOvB,KAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAlDID,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAqDf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}