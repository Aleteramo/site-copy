{"ast":null,"code":"var _jsxFileName = \"/Users/alessiocavatassi/Desktop/site/src/NeuralScene.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport logoImage from './immagini2/logounite.jpeg';\nimport umanoideImage from './immagini2/umanoide.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NeuralScene = ({\n  isScrolled\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  const manichino3DRef = useRef(); // Ref per il manichino 3D\n\n  useEffect(() => {\n    const currentRef = mountRef.current;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    currentRef.appendChild(renderer.domElement);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableZoom = false;\n\n    // Carica il cubo con la texture del logo\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(logoImage, function (texture) {\n      const material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      const cubeGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      const cube = new THREE.Mesh(cubeGeometry, material);\n      cube.position.set(isScrolled ? 2 : 0, isScrolled ? 2 : 1, 1);\n      scene.add(cube);\n    });\n\n    // Carica il manichino 3D\n    const loader = new GLTFLoader();\n    loader.load('/3dumanoide.glb', function (gltf) {\n      gltf.scene.scale.set(0.5, 0.5, 0.5);\n      gltf.scene.position.set(0, 0, 0);\n      gltf.scene.rotation.y = Math.PI;\n      scene.add(gltf.scene);\n      manichino3DRef.current = gltf.scene; // Assegna la scena caricata al ref\n    }, undefined, function (error) {\n      console.error('An error happened while loading the model:', error);\n    });\n\n    // Particelle\n    const particlesGeometry = new THREE.BufferGeometry();\n    const particlesCount = 10000;\n    const posArray = new Float32Array(particlesCount * 3);\n    for (let i = 0; i < particlesCount * 3; i++) {\n      posArray[i] = (Math.random() - 0.5) * (Math.random() * 10);\n    }\n    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n    const particlesMaterial = new THREE.PointsMaterial({\n      size: 0.007\n    });\n    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n    scene.add(particlesMesh);\n\n    // Luci\n    const light = new THREE.AmbientLight(0x404040);\n    scene.add(light);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 0, 0);\n    scene.add(directionalLight);\n\n    // Animazione\n    let angoloMovimento = 0;\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Movimento circolare del manichino 3D\n      angoloMovimento += 0.01;\n      const raggio = 5;\n      const x = Math.sin(angoloMovimento) * raggio;\n      const z = Math.cos(angoloMovimento) * raggio;\n      if (manichino3DRef.current) {\n        manichino3DRef.current.position.x = x;\n        manichino3DRef.current.position.z = z;\n      }\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Gestione del ridimensionamento della finestra\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onWindowResize);\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      currentRef.removeChild(renderer.domElement);\n    };\n  }, [isScrolled]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    className: \"scene-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s(NeuralScene, \"qr80HdA6s/VTMLsPwQTsYN3H2Ms=\");\n_c = NeuralScene;\nexport default NeuralScene;\nvar _c;\n$RefreshReg$(_c, \"NeuralScene\");","map":{"version":3,"names":["React","useRef","useEffect","GLTFLoader","THREE","OrbitControls","logoImage","umanoideImage","jsxDEV","_jsxDEV","NeuralScene","isScrolled","_s","mountRef","manichino3DRef","currentRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","enableZoom","textureLoader","TextureLoader","load","texture","material","MeshBasicMaterial","map","cubeGeometry","BoxGeometry","cube","Mesh","set","add","loader","gltf","scale","rotation","y","Math","PI","undefined","error","console","particlesGeometry","BufferGeometry","particlesCount","posArray","Float32Array","i","random","setAttribute","BufferAttribute","particlesMaterial","PointsMaterial","size","particlesMesh","Points","light","AmbientLight","directionalLight","DirectionalLight","angoloMovimento","animate","requestAnimationFrame","raggio","x","sin","cos","update","render","onWindowResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alessiocavatassi/Desktop/site/src/NeuralScene.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport logoImage from './immagini2/logounite.jpeg';\nimport umanoideImage from './immagini2/umanoide.png';\n\nconst NeuralScene = ({ isScrolled }) => {\n  const mountRef = useRef(null);\n  const manichino3DRef = useRef(); // Ref per il manichino 3D\n\n  useEffect(() => {\n    const currentRef = mountRef.current;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    currentRef.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableZoom = false;\n\n    // Carica il cubo con la texture del logo\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(logoImage, function (texture) {\n      const material = new THREE.MeshBasicMaterial({ map: texture });\n      const cubeGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      const cube = new THREE.Mesh(cubeGeometry, material);\n      cube.position.set(isScrolled ? 2 : 0, isScrolled ? 2 : 1, 1);\n      scene.add(cube);\n    });\n\n    // Carica il manichino 3D\n    const loader = new GLTFLoader();\n    loader.load('/3dumanoide.glb', function (gltf) {\n      gltf.scene.scale.set(0.5, 0.5, 0.5);\n      gltf.scene.position.set(0, 0, 0);\n      gltf.scene.rotation.y = Math.PI;\n      scene.add(gltf.scene);\n      manichino3DRef.current = gltf.scene; // Assegna la scena caricata al ref\n    }, undefined, function (error) {\n      console.error('An error happened while loading the model:', error);\n    });\n\n    // Particelle\n    const particlesGeometry = new THREE.BufferGeometry();\n    const particlesCount = 10000;\n    const posArray = new Float32Array(particlesCount * 3);\n    for (let i = 0; i < particlesCount * 3; i++) {\n      posArray[i] = (Math.random() - 0.5) * (Math.random() * 10);\n    }\n    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n    const particlesMaterial = new THREE.PointsMaterial({ size: 0.007 });\n    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n    scene.add(particlesMesh);\n\n    // Luci\n    const light = new THREE.AmbientLight(0x404040);\n    scene.add(light);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 0, 0);\n    scene.add(directionalLight);\n\n    // Animazione\n    let angoloMovimento = 0;\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Movimento circolare del manichino 3D\n      angoloMovimento += 0.01;\n      const raggio = 5;\n      const x = Math.sin(angoloMovimento) * raggio;\n      const z = Math.cos(angoloMovimento) * raggio;\n      if (manichino3DRef.current) {\n        manichino3DRef.current.position.x = x;\n        manichino3DRef.current.position.z = z;\n      }\n\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Gestione del ridimensionamento della finestra\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      currentRef.removeChild(renderer.domElement);\n    };\n  }, [isScrolled]);\n\n  return <div ref={mountRef} className=\"scene-container\" />;\n};\n\nexport default NeuralScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}