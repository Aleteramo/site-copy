{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{GLTFLoader}from'three/examples/jsm/loaders/GLTFLoader';import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import logoImage from'./immagini2/logounite.jpeg';import umanoideImage from'./immagini2/umanoide.png';import{jsx as _jsx}from\"react/jsx-runtime\";const NeuralScene=_ref=>{let{isScrolled}=_ref;const mountRef=useRef(null);const umanoideRef=useRef();const cubeRef=useRef();const manichino3DRef=useRef();useEffect(()=>{const currentRef=mountRef.current;const scene=new THREE.Scene();const camera=new THREE.PerspectiveCamera(50,window.innerWidth/window.innerHeight,0.1,1000);camera.position.z=5;const renderer=new THREE.WebGLRenderer({antialias:true});renderer.setSize(window.innerWidth,window.innerHeight);currentRef.appendChild(renderer.domElement);const controls=new OrbitControls(camera,renderer.domElement);const isMobile=/iPhone|iPad|iPod|Android/i.test(navigator.userAgent);if(isMobile){controls.enablePan=false;controls.enableZoom=false;// o controlli di zoom specifici per mobile\ncontrols.enableRotate=false;}controls.enableZoom=false;const textureLoader=new THREE.TextureLoader();textureLoader.load(logoImage,function(texture){texture.generateMipmaps=true;texture.minFilter=THREE.LinearFilter;// Potrebbe migliorare la qualità su ridimensionamenti minori\nconst material=new THREE.MeshBasicMaterial({map:texture});const cubeGeometry=new THREE.BoxGeometry(0.5,0.5,0.5);const cube=new THREE.Mesh(cubeGeometry,material);cube.position.set(isScrolled?2:0,isScrolled?2:1,1);scene.add(cube);cubeRef.current=cube;});// Carica l'immagine dell'umanoide come texture su un cubo trasparente\nconst umanoideTexture=textureLoader.load(umanoideImage);const umanoideMaterials=[new THREE.MeshBasicMaterial({transparent:true,opacity:0}),// Faccia superiore completamente trasparente\nnew THREE.MeshBasicMaterial({transparent:true,opacity:0}),// Faccia superiore completamente trasparente\nnew THREE.MeshBasicMaterial({transparent:true,opacity:0}),// Faccia superiore completamente trasparente\nnew THREE.MeshBasicMaterial({transparent:true,opacity:0}),// Faccia superiore completamente trasparente\nnew THREE.MeshBasicMaterial({map:umanoideTexture,transparent:true}),// Faccia destra\nnew THREE.MeshBasicMaterial({map:umanoideTexture,transparent:true})// Faccia sinistra\n];const umanoideGeometry=new THREE.BoxGeometry(0.9,0.9,1);const umanoide=new THREE.Mesh(umanoideGeometry,umanoideMaterials);umanoide.position.set(-3.5,-1.8,0);scene.add(umanoide);umanoideRef.current=umanoide;// Particelle\nconst particlesGeometry=new THREE.BufferGeometry();const particlesCount=10000;const posArray=new Float32Array(particlesCount*3);for(let i=0;i<particlesCount*3;i++){posArray[i]=(Math.random()-0.5)*(Math.random()*10);}particlesGeometry.setAttribute('position',new THREE.BufferAttribute(posArray,3));const particlesMaterial=new THREE.PointsMaterial({size:0.007});const particlesMesh=new THREE.Points(particlesGeometry,particlesMaterial);scene.add(particlesMesh);// Luci\nconst light=new THREE.AmbientLight(0x404040);scene.add(light);const directionalLight=new THREE.DirectionalLight(0xffffff,1);directionalLight.position.set(0,0,0);scene.add(directionalLight);// Carica il manichino 3D\nconst loader=new GLTFLoader();loader.load('/3dumanoide.glb',function(gltf){gltf.scene.scale.set(0.5,0.5,0.5);// Aumenta la scala se necessario\ngltf.scene.position.set(0,0,0);// Imposta la posizione iniziale\ngltf.scene.rotation.y=Math.PI;// Ruota di 180 gradi se necessario\nscene.add(gltf.scene);manichino3DRef.current=gltf.scene;// Assegna la scena caricata al ref\nanimate();// Avvia l'animazione dopo che il modello è stato caricato\n},undefined,function(error){console.error('An error happened while loading the model:',error);});// Animazione\nlet clock=new THREE.Clock();const animate=()=>{requestAnimationFrame(animate);let time=clock.getElapsedTime();if(manichino3DRef.current){// Movimento fluttuante basato su funzioni sinusoidali per x, y, z\nmanichino3DRef.current.position.x=Math.sin(time*0.5)*2;manichino3DRef.current.position.y=Math.sin(time*0.7)*2;manichino3DRef.current.position.z=Math.sin(time*0.3)*2;// Rotazione continua per aggiungere dinamismo\nmanichino3DRef.current.rotation.y+=0.01;}// Anima l'umanoide\nif(umanoideRef.current){umanoideRef.current.rotation.y+=0.001;}// Anima il cubo\nif(cubeRef.current){cubeRef.current.rotation.x+=0.003;cubeRef.current.rotation.y+=0.003;}// Anima le particelle\nif(particlesMesh){particlesMesh.rotation.y+=0.001;}controls.update();renderer.render(scene,camera);};animate();const onWindowResize=()=>{camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,window.innerHeight);};window.addEventListener('resize',onWindowResize,false);// Logica per rendere l'umanoide cliccabile\nconst onClick=event=>{const mouse=new THREE.Vector2(event.clientX/window.innerWidth*2-1,-(event.clientY/window.innerHeight)*2+1);const raycaster=new THREE.Raycaster();raycaster.setFromCamera(mouse,camera);const intersects=raycaster.intersectObjects(scene.children);for(let i=0;i<intersects.length;i++){if(intersects[i].object===umanoideRef.current){window.location.href='https://ia-liart-one.vercel.app/';break;}}};window.addEventListener('click',onClick);return()=>{window.removeEventListener('resize',onWindowResize);window.removeEventListener('click',onClick);currentRef.removeChild(renderer.domElement);};},[isScrolled]);// Non è necessario aggiungere ologrammaRef.current qui\nreturn/*#__PURE__*/_jsx(\"div\",{ref:mountRef,className:\"scene-container\"});};export default NeuralScene;","map":{"version":3,"names":["React","useRef","useEffect","GLTFLoader","THREE","OrbitControls","logoImage","umanoideImage","jsx","_jsx","NeuralScene","_ref","isScrolled","mountRef","umanoideRef","cubeRef","manichino3DRef","currentRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","isMobile","test","navigator","userAgent","enablePan","enableZoom","enableRotate","textureLoader","TextureLoader","load","texture","generateMipmaps","minFilter","LinearFilter","material","MeshBasicMaterial","map","cubeGeometry","BoxGeometry","cube","Mesh","set","add","umanoideTexture","umanoideMaterials","transparent","opacity","umanoideGeometry","umanoide","particlesGeometry","BufferGeometry","particlesCount","posArray","Float32Array","i","Math","random","setAttribute","BufferAttribute","particlesMaterial","PointsMaterial","size","particlesMesh","Points","light","AmbientLight","directionalLight","DirectionalLight","loader","gltf","scale","rotation","y","PI","animate","undefined","error","console","clock","Clock","requestAnimationFrame","time","getElapsedTime","x","sin","update","render","onWindowResize","aspect","updateProjectionMatrix","addEventListener","onClick","event","mouse","Vector2","clientX","clientY","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","children","length","object","location","href","removeEventListener","removeChild","ref","className"],"sources":["/Users/alessiocavatassi/Desktop/site/src/NeuralScene.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport logoImage from './immagini2/logounite.jpeg';\nimport umanoideImage from './immagini2/umanoide.png';\n\n\n\nconst NeuralScene = ({ isScrolled }) => {\n  const mountRef = useRef(null);\n  const umanoideRef = useRef();\n  const cubeRef = useRef();\n  const manichino3DRef = useRef();\n\n\n  useEffect(() => {\n    const currentRef = mountRef.current;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    currentRef.appendChild(renderer.domElement);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    if (isMobile) {\n      controls.enablePan = false;\n      controls.enableZoom = false; // o controlli di zoom specifici per mobile\n      controls.enableRotate = false;\n    }\n    controls.enableZoom = false;\n\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(logoImage, function (texture) {\n      texture.generateMipmaps = true;\n      texture.minFilter = THREE.LinearFilter; // Potrebbe migliorare la qualità su ridimensionamenti minori\n      const material = new THREE.MeshBasicMaterial({ map: texture });\n      const cubeGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      const cube = new THREE.Mesh(cubeGeometry, material);\n      cube.position.set(isScrolled ? 2 : 0, isScrolled ? 2 : 1, 1);\n      scene.add(cube);\n      cubeRef.current = cube;\n    });\n\n    // Carica l'immagine dell'umanoide come texture su un cubo trasparente\n    const umanoideTexture = textureLoader.load(umanoideImage);\n    const umanoideMaterials = [\n      new THREE.MeshBasicMaterial({ transparent: true, opacity: 0 }), // Faccia superiore completamente trasparente\n      new THREE.MeshBasicMaterial({ transparent: true, opacity: 0 }), // Faccia superiore completamente trasparente\n      new THREE.MeshBasicMaterial({ transparent: true, opacity: 0 }), // Faccia superiore completamente trasparente\n      new THREE.MeshBasicMaterial({ transparent: true, opacity: 0 }), // Faccia superiore completamente trasparente\n      new THREE.MeshBasicMaterial({ map: umanoideTexture, transparent: true }), // Faccia destra\n      new THREE.MeshBasicMaterial({ map: umanoideTexture, transparent: true }), // Faccia sinistra\n    ];\n    const umanoideGeometry = new THREE.BoxGeometry(0.9, 0.9, 1);\n    const umanoide = new THREE.Mesh(umanoideGeometry, umanoideMaterials);\n    umanoide.position.set(-3.5, -1.8, 0);\n    scene.add(umanoide);\n    umanoideRef.current = umanoide;\n\n  \n\n    \n    // Particelle\n    const particlesGeometry = new THREE.BufferGeometry();\n    const particlesCount = 10000;\n    const posArray = new Float32Array(particlesCount * 3);\n    for (let i = 0; i < particlesCount * 3; i++) {\n      posArray[i] = (Math.random() - 0.5) * (Math.random() * 10);\n    }\n    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n\n    const particlesMaterial = new THREE.PointsMaterial({ size: 0.007 });\n    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n    scene.add(particlesMesh);\n\n    // Luci\n    const light = new THREE.AmbientLight(0x404040);\n    scene.add(light);\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 0, 0);\n    scene.add(directionalLight);\n\n   // Carica il manichino 3D\nconst loader = new GLTFLoader();\nloader.load('/3dumanoide.glb', function (gltf) {\n  gltf.scene.scale.set(0.5, 0.5, 0.5); // Aumenta la scala se necessario\n  gltf.scene.position.set(0, 0, 0); // Imposta la posizione iniziale\n  gltf.scene.rotation.y = Math.PI; // Ruota di 180 gradi se necessario\n  scene.add(gltf.scene);\n  manichino3DRef.current = gltf.scene; // Assegna la scena caricata al ref\n  animate(); // Avvia l'animazione dopo che il modello è stato caricato\n}, undefined, function (error) {\n  console.error('An error happened while loading the model:', error);\n});\n\n// Animazione\nlet clock = new THREE.Clock();\n\nconst animate = () => {\n  requestAnimationFrame(animate);\n\n  let time = clock.getElapsedTime();\n\n  if (manichino3DRef.current) {\n    // Movimento fluttuante basato su funzioni sinusoidali per x, y, z\n    manichino3DRef.current.position.x = Math.sin(time * 0.5) * 2;\n    manichino3DRef.current.position.y = Math.sin(time * 0.7) * 2;\n    manichino3DRef.current.position.z = Math.sin(time * 0.3) * 2;\n    // Rotazione continua per aggiungere dinamismo\n    manichino3DRef.current.rotation.y += 0.01;\n  }\n\n\n      // Anima l'umanoide\n      if (umanoideRef.current) {\n        umanoideRef.current.rotation.y += 0.001;\n      }\n\n      // Anima il cubo\n      if (cubeRef.current) {\n        cubeRef.current.rotation.x += 0.003;\n        cubeRef.current.rotation.y += 0.003;      \n      }\n\n      // Anima le particelle\n      if (particlesMesh) {\n        particlesMesh.rotation.y += 0.001;\n      }\n\n\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onWindowResize, false);\n\n    // Logica per rendere l'umanoide cliccabile\n    const onClick = (event) => {\n      const mouse = new THREE.Vector2(\n        (event.clientX / window.innerWidth) * 2 - 1,\n        -(event.clientY / window.innerHeight) * 2 + 1\n      );\n\n      const raycaster = new THREE.Raycaster();\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObjects(scene.children);\n\n      for (let i = 0; i < intersects.length; i++) {\n        if (intersects[i].object === umanoideRef.current) {\n          window.location.href = 'https://ia-liart-one.vercel.app/';\n          break;\n        }\n      }\n    };\n\n    window.addEventListener('click', onClick);\n\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      window.removeEventListener('click', onClick);\n      currentRef.removeChild(renderer.domElement);\n    };\n  }, [isScrolled]); // Non è necessario aggiungere ologrammaRef.current qui\n\n  return <div ref={mountRef} className=\"scene-container\" />;\n};\n\nexport default NeuralScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}