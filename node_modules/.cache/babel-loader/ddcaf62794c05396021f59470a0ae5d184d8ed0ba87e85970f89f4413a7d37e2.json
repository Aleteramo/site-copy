{"ast":null,"code":"var _jsxFileName = \"/Users/alessiocavatassi/Desktop/site/src/NeuralScene.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport logoImage from './immagini2/logounite.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NeuralScene = ({\n  isScrolled\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const currentRef = mountRef.current;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    if (currentRef) {\n      currentRef.appendChild(renderer.domElement);\n    }\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableZoom = false;\n\n    // Carica l'immagine come texture su un PlaneGeometry\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(logoImage, function (texture) {\n      const geometry = new THREE.PlaneGeometry(1, 1);\n      const material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n      const plane = new THREE.Mesh(geometry, material);\n      plane.position.set(0, 0, 0);\n      scene.add(plane);\n    });\n\n    // Particelle\n    const particlesGeometry = new THREE.BufferGeometry();\n    const particlesCount = 5000;\n    const posArray = new Float32Array(particlesCount * 3);\n    for (let i = 0; i < particlesCount * 3; i++) {\n      posArray[i] = (Math.random() - 0.5) * 5;\n    }\n    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n    const particlesMaterial = new THREE.PointsMaterial({\n      size: 0.005\n    });\n    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n    scene.add(particlesMesh);\n\n    // Luci\n    const light = new THREE.AmbientLight(0x404040);\n    scene.add(light);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 1, 1);\n    scene.add(directionalLight);\n    const animate = () => {\n      requestAnimationFrame(animate);\n      particlesMesh.rotation.y += 0.001;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onWindowResize, false);\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      if (currentRef && renderer.domElement) {\n        currentRef.removeChild(renderer.domElement);\n      }\n    };\n  }, [isScrolled]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    className: \"scene-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(NeuralScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = NeuralScene;\nexport default NeuralScene;\nvar _c;\n$RefreshReg$(_c, \"NeuralScene\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","OrbitControls","logoImage","jsxDEV","_jsxDEV","NeuralScene","isScrolled","_s","mountRef","currentRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","controls","enableZoom","textureLoader","TextureLoader","load","texture","geometry","PlaneGeometry","material","MeshBasicMaterial","map","plane","Mesh","set","add","particlesGeometry","BufferGeometry","particlesCount","posArray","Float32Array","i","Math","random","setAttribute","BufferAttribute","particlesMaterial","PointsMaterial","size","particlesMesh","Points","light","AmbientLight","directionalLight","DirectionalLight","animate","requestAnimationFrame","rotation","y","update","render","onWindowResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alessiocavatassi/Desktop/site/src/NeuralScene.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport logoImage from './immagini2/logounite.jpeg'; \n\nconst NeuralScene = ({ isScrolled }) => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const currentRef = mountRef.current; \n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true }); \n    renderer.setSize(window.innerWidth, window.innerHeight);\n    if (currentRef) {\n      currentRef.appendChild(renderer.domElement);\n    }\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableZoom = false; \n\n    // Carica l'immagine come texture su un PlaneGeometry\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(logoImage, function(texture) {\n      const geometry = new THREE.PlaneGeometry(1, 1);\n      const material = new THREE.MeshBasicMaterial({ map: texture });\n      const plane = new THREE.Mesh(geometry, material);\n      plane.position.set(0, 0, 0);\n      scene.add(plane);\n    });\n\n    // Particelle\n    const particlesGeometry = new THREE.BufferGeometry();\n    const particlesCount = 5000;\n    const posArray = new Float32Array(particlesCount * 3); \n    for (let i = 0; i < particlesCount * 3; i++) {\n      posArray[i] = (Math.random() - 0.5) * 5;\n    }\n    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n\n    const particlesMaterial = new THREE.PointsMaterial({ size: 0.005 });\n    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n    scene.add(particlesMesh);\n\n    // Luci\n    const light = new THREE.AmbientLight(0x404040); \n    scene.add(light);\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 1, 1);\n    scene.add(directionalLight);\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      particlesMesh.rotation.y += 0.001;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onWindowResize, false);\n\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      if (currentRef && renderer.domElement) {\n        currentRef.removeChild(renderer.domElement);\n      }\n    };\n  }, [isScrolled]);\n\n  return (\n    <div ref={mountRef} className=\"scene-container\" />\n  );\n};\n\nexport default NeuralScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}