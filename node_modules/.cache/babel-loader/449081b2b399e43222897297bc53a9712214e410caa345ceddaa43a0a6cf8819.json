{"ast":null,"code":"var _jsxFileName = \"/Users/alessiocavatassi/Desktop/site/src/Carosello.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Import images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst immagini = [immagine1, immagine2, immagine3, immagine4, immagine5];\nconst Carosello = () => {\n  _s();\n  const caroselloRef = useRef(null);\n  const [isCaroselloFullyInView, setIsCaroselloFullyInView] = useState(false);\n  const [caroselloScrollPosition, setCaroselloScrollPosition] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      const caroselloRect = caroselloRef.current.getBoundingClientRect();\n      const isFullyInView = caroselloRect.top >= 0 && caroselloRect.bottom <= window.innerHeight;\n      setIsCaroselloFullyInView(isFullyInView);\n      if (isFullyInView) {\n        // Calcola la posizione di scroll relativa al carosello\n        const scrollDelta = currentScrollY - caroselloRect.top;\n        setCaroselloScrollPosition(scrollDelta);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  useEffect(() => {\n    if (isCaroselloFullyInView) {\n      // Aggiorna la posizione delle immagini solo se il carosello è completamente visibile\n      updateCaroselloImagesPosition();\n    }\n  }, [isCaroselloFullyInView, caroselloScrollPosition]);\n  const updateCaroselloImagesPosition = () => {\n    const movementSpeed = 2; // Regola la velocità di movimento delle immagini\n    const maxScroll = immagini.length * 300; // Calcola lo scroll massimo basato sul numero di immagini e spazio tra di esse\n\n    immagini.forEach((_, index) => {\n      const imageElement = caroselloRef.current.children[index];\n      // Calcola la nuova posizione delle immagini basata sulla posizione di scroll del carosello\n      const newPosition = Math.min(maxScroll, caroselloScrollPosition * movementSpeed);\n      imageElement.style.transform = `translateX(-${newPosition}px)`;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: caroselloRef,\n    className: \"carousel-container\",\n    children: immagini.map((src, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/dettaglio/${index}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: `Immagine ${index + 1}`,\n        className: \"carosello-immagine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Carosello, \"e51r6f400Es9rj5FEotQyrT5o1M=\");\n_c = Carosello;\nexport default Carosello;\nvar _c;\n$RefreshReg$(_c, \"Carosello\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","jsxDEV","_jsxDEV","immagini","immagine1","immagine2","immagine3","immagine4","immagine5","Carosello","_s","caroselloRef","isCaroselloFullyInView","setIsCaroselloFullyInView","caroselloScrollPosition","setCaroselloScrollPosition","handleScroll","currentScrollY","window","scrollY","caroselloRect","current","getBoundingClientRect","isFullyInView","top","bottom","innerHeight","scrollDelta","addEventListener","removeEventListener","updateCaroselloImagesPosition","movementSpeed","maxScroll","length","forEach","_","index","imageElement","children","newPosition","Math","min","style","transform","ref","className","map","src","to","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alessiocavatassi/Desktop/site/src/Carosello.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Import images\nconst immagini = [immagine1, immagine2, immagine3, immagine4, immagine5];\n\nconst Carosello = () => {\n  const caroselloRef = useRef(null);\n  const [isCaroselloFullyInView, setIsCaroselloFullyInView] = useState(false);\n  const [caroselloScrollPosition, setCaroselloScrollPosition] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      const caroselloRect = caroselloRef.current.getBoundingClientRect();\n      const isFullyInView = caroselloRect.top >= 0 && caroselloRect.bottom <= window.innerHeight;\n\n      setIsCaroselloFullyInView(isFullyInView);\n\n      if (isFullyInView) {\n        // Calcola la posizione di scroll relativa al carosello\n        const scrollDelta = currentScrollY - caroselloRect.top;\n        setCaroselloScrollPosition(scrollDelta);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isCaroselloFullyInView) {\n      // Aggiorna la posizione delle immagini solo se il carosello è completamente visibile\n      updateCaroselloImagesPosition();\n    }\n  }, [isCaroselloFullyInView, caroselloScrollPosition]);\n\n  const updateCaroselloImagesPosition = () => {\n    const movementSpeed = 2; // Regola la velocità di movimento delle immagini\n    const maxScroll = immagini.length * 300; // Calcola lo scroll massimo basato sul numero di immagini e spazio tra di esse\n\n    immagini.forEach((_, index) => {\n      const imageElement = caroselloRef.current.children[index];\n      // Calcola la nuova posizione delle immagini basata sulla posizione di scroll del carosello\n      const newPosition = Math.min(maxScroll, caroselloScrollPosition * movementSpeed);\n      imageElement.style.transform = `translateX(-${newPosition}px)`;\n    });\n  };\n\n  return (\n    <div ref={caroselloRef} className=\"carousel-container\">\n      {immagini.map((src, index) => (\n        <Link key={index} to={`/dettaglio/${index}`}>\n          <img src={src} alt={`Immagine ${index + 1}`} className=\"carosello-immagine\" />\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default Carosello;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}