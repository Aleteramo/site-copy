{"ast":null,"code":"import React,{useRef,useEffect}from'react';import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls';import logoImage from'./immagini2/logounite.jpeg';import{jsx as _jsx}from\"react/jsx-runtime\";const NeuralScene=_ref=>{let{isScrolled}=_ref;const mountRef=useRef(null);useEffect(()=>{const currentRef=mountRef.current;const scene=new THREE.Scene();const camera=new THREE.PerspectiveCamera(50,window.innerWidth/window.innerHeight,0.1,1000);camera.position.z=5;const renderer=new THREE.WebGLRenderer({antialias:true});renderer.setSize(window.innerWidth,window.innerHeight);if(currentRef){currentRef.appendChild(renderer.domElement);}let cube;const controls=new OrbitControls(camera,renderer.domElement);controls.enableZoom=false;const textureLoader=new THREE.TextureLoader();textureLoader.load(logoImage,function(texture){texture.minFilter=THREE.LinearFilter;texture.magFilter=THREE.LinearFilter;const material=new THREE.MeshBasicMaterial({map:texture});const materials=Array(6).fill(material);const cubeGeometry=new THREE.BoxGeometry(0.5,0.5,0.5);cube=new THREE.Mesh(cubeGeometry,materials);cube.position.set(isScrolled?2:0,isScrolled?2:1,1);scene.add(cube);});// Particelle\nconst particlesGeometry=new THREE.BufferGeometry();const particlesCount=10000;const posArray=new Float32Array(particlesCount*3);for(let i=0;i<particlesCount*3;i++){posArray[i]=(Math.random()-0.5)*(Math.random()*5);}particlesGeometry.setAttribute('position',new THREE.BufferAttribute(posArray,3));const particlesMaterial=new THREE.PointsMaterial({size:0.007});const particlesMesh=new THREE.Points(particlesGeometry,particlesMaterial);scene.add(particlesMesh);// Luci\nconst light=new THREE.AmbientLight(0x404040);scene.add(light);const directionalLight=new THREE.DirectionalLight(0xffffff,1);directionalLight.position.set(0,0,0);scene.add(directionalLight);const animate=()=>{requestAnimationFrame(animate);if(particlesMesh){particlesMesh.rotation.y+=0.001;}if(cube){cube.rotation.x+=0.01;cube.rotation.y+=0.01;}controls.update();renderer.render(scene,camera);};animate();const onWindowResize=()=>{camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();renderer.setSize(window.innerWidth,window.innerHeight);};window.addEventListener('resize',onWindowResize,false);return()=>{window.removeEventListener('resize',onWindowResize);if(currentRef&&renderer.domElement){// Usa la variabile copiata nella funzione di pulizia\ncurrentRef.removeChild(renderer.domElement);}};},[isScrolled]);return/*#__PURE__*/_jsx(\"div\",{ref:mountRef,className:\"scene-container\"});};export default NeuralScene;","map":{"version":3,"names":["React","useRef","useEffect","THREE","OrbitControls","logoImage","jsx","_jsx","NeuralScene","_ref","isScrolled","mountRef","currentRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","setSize","appendChild","domElement","cube","controls","enableZoom","textureLoader","TextureLoader","load","texture","minFilter","LinearFilter","magFilter","material","MeshBasicMaterial","map","materials","Array","fill","cubeGeometry","BoxGeometry","Mesh","set","add","particlesGeometry","BufferGeometry","particlesCount","posArray","Float32Array","i","Math","random","setAttribute","BufferAttribute","particlesMaterial","PointsMaterial","size","particlesMesh","Points","light","AmbientLight","directionalLight","DirectionalLight","animate","requestAnimationFrame","rotation","y","x","update","render","onWindowResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","ref","className"],"sources":["/Users/alessiocavatassi/Desktop/site/src/NeuralScene.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport logoImage from './immagini2/logounite.jpeg'; \n\nconst NeuralScene = ({ isScrolled }) => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const currentRef = mountRef.current; \n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true }); \n    renderer.setSize(window.innerWidth, window.innerHeight);\n    if (currentRef) {\n      currentRef.appendChild(renderer.domElement);\n    }\n\n    let cube;\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableZoom = false; \n\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(logoImage, function(texture) {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n\n      const material = new THREE.MeshBasicMaterial({ map: texture });\n      const materials = Array(6).fill(material);\n      const cubeGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      cube = new THREE.Mesh(cubeGeometry, materials);\n      cube.position.set(isScrolled ? 2 : 0, isScrolled ? 2 : 1, 1);\n      scene.add(cube);\n    });\n\n    // Particelle\n    const particlesGeometry = new THREE.BufferGeometry();\n    const particlesCount = 10000;\n    const posArray = new Float32Array(particlesCount * 3); \n    for (let i = 0; i < particlesCount * 3; i++) {\n      posArray[i] = (Math.random() - 0.5) * (Math.random() * 5);\n    }\n    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n\n    const particlesMaterial = new THREE.PointsMaterial({ size: 0.007 });\n    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n    scene.add(particlesMesh);\n\n    // Luci\n    const light = new THREE.AmbientLight(0x404040); \n    scene.add(light);\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(0, 0, 0);\n    scene.add(directionalLight);\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      if (particlesMesh) {\n        particlesMesh.rotation.y += 0.001;\n      }\n\n      if (cube) {\n        cube.rotation.x += 0.01;\n        cube.rotation.y += 0.01;\n      }\n\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onWindowResize, false);\n\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      if (currentRef && renderer.domElement) { // Usa la variabile copiata nella funzione di pulizia\n        currentRef.removeChild(renderer.domElement);\n      }\n    };\n  }, [isScrolled]);\n\n  return (\n    <div ref={mountRef} className=\"scene-container\" />\n  );\n};\n\nexport default NeuralScene;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}